From 2b68e1113350d353e4e922163fcf92dfe9c6854c Mon Sep 17 00:00:00 2001
From: Jameson.Quinn <Jameson.Quinn+pyjamas@gmail.com>
Date: Fri, 20 Aug 2010 23:21:38 -0500
Subject: [PATCH] further JS() feature/rule-change and pyjslib cleanup... ie6 untested

---
 library/__ie6__/pyjamas/ui/Focus.py           |    4 +-
 library/__ie6__/pyjamas/ui/FormPanel.py       |   28 ++++++++++----------
 library/__ie6__/pyjamas/ui/PopupPanel.py      |   10 +++---
 library/__ie6__/pyjamas/ui/TextBoxBase.py     |    4 +-
 library/__ie6__/pyjamas/ui/horizsplitpanel.py |    4 +-
 library/pyjamas/PyExternalMod.py              |   20 +++++++-------
 pygtkweb/library/browser.py                   |   34 ++++++++++++------------
 7 files changed, 52 insertions(+), 52 deletions(-)

diff --git a/library/__ie6__/pyjamas/ui/Focus.py b/library/__ie6__/pyjamas/ui/Focus.py
index 1c1ebc1..9f2b316 100644
--- a/library/__ie6__/pyjamas/ui/Focus.py
+++ b/library/__ie6__/pyjamas/ui/Focus.py
@@ -2,10 +2,10 @@
 def focus(elem):
     JS("""
         try {
-            elem.focus();
+            @{{elem}}.focus();
         } catch (e) {
             // Only trap the exception if the attempt was mostly legit
-            if (!elem || !elem.focus) {
+            if (!@{{elem}} || !@{{elem}}.focus) {
                 // Rethrow the probable NPE or invalid type
                 throw e;
             }
diff --git a/library/__ie6__/pyjamas/ui/FormPanel.py b/library/__ie6__/pyjamas/ui/FormPanel.py
index 11097db..5905de7 100644
--- a/library/__ie6__/pyjamas/ui/FormPanel.py
+++ b/library/__ie6__/pyjamas/ui/FormPanel.py
@@ -2,10 +2,10 @@ class FormPanel:
     def getTextContents(self, iframe):
         JS("""
         try {
-            if (!iframe.contentWindow.document)
+            if (!@{{iframe}}.contentWindow.document)
                 return null;
         
-            return iframe.contentWindow.document.body.innerText;
+            return @{{iframe}}.contentWindow.document.body.innerText;
         } catch (e) {
             return null;
         }
@@ -13,28 +13,28 @@ class FormPanel:
 
     def hookEvents(self, iframe, form, listener):
         JS("""
-        if (iframe) {
-            iframe.onreadystatechange = function() {
-                if (!iframe.__formAction)
+        if (@{{iframe}}) {
+            @{{iframe}}.onreadystatechange = function() {
+                if (!@{{iframe}}.__formAction)
                     return;
         
-                if (iframe.readyState == 'complete') {
-                    listener.onFrameLoad();
+                if (@{{iframe}}.readyState == 'complete') {
+                    @{{listener}}.onFrameLoad();
                 }
             };
         }
 
-        form.onsubmit = function() {
-            if (iframe)
-                iframe.__formAction = form.action;
-            return listener.onFormSubmit();
+        @{{form}}.onsubmit = function() {
+            if (@{{iframe}})
+                @{{iframe}}.__formAction = @{{form}}.action;
+            return @{{listener}}.onFormSubmit();
         };
         """)
 
     def unhookEvents(self, iframe, form):
         JS("""
-        if (iframe)
-            iframe.onreadystatechange = null;
-        form.onsubmit = null;
+        if (@{{iframe}})
+            @{{iframe}}.onreadystatechange = null;
+        @{{form}}.onsubmit = null;
         """)
 
diff --git a/library/__ie6__/pyjamas/ui/PopupPanel.py b/library/__ie6__/pyjamas/ui/PopupPanel.py
index aa70633..2b73a64 100644
--- a/library/__ie6__/pyjamas/ui/PopupPanel.py
+++ b/library/__ie6__/pyjamas/ui/PopupPanel.py
@@ -9,21 +9,21 @@ class PopupPanel:
         frame.style.position = 'absolute';
         frame.src = "javascript:''";
         
-        popup.__frame = frame;
-        frame.__popup = popup;
+        @{{popup}}.__frame = frame;
+        frame.__popup = @{{popup}};
         frame.style.setExpression('left', 'this.__popup.offsetLeft');
         frame.style.setExpression('top', 'this.__popup.offsetTop');
         frame.style.setExpression('width', 'this.__popup.offsetWidth');
         frame.style.setExpression('height', 'this.__popup.offsetHeight');
-        popup.parentElement.insertBefore(frame, popup);
+        @{{popup}}.parentElement.insertBefore(frame, @{{popup}});
         """)
 
     # PopupImpl.onHide
     def onHideImpl(self, popup):
         JS("""
-        var frame = popup.__frame;
+        var frame = @{{popup}}.__frame;
         frame.parentElement.removeChild(frame);
-        popup.__frame = null;
+        @{{popup}}.__frame = null;
         frame.__popup = null;
         """)
 
diff --git a/library/__ie6__/pyjamas/ui/TextBoxBase.py b/library/__ie6__/pyjamas/ui/TextBoxBase.py
index 2f4d4c7..a8d9021 100644
--- a/library/__ie6__/pyjamas/ui/TextBoxBase.py
+++ b/library/__ie6__/pyjamas/ui/TextBoxBase.py
@@ -33,8 +33,8 @@ class TextBoxBase:
             var elem = this.getElement();
             var tr = elem.createTextRange();
             tr.collapse(true);
-            tr.moveStart('character', pos);
-            tr.moveEnd('character', length);
+            tr.moveStart('character', @{{pos}});
+            tr.moveEnd('character', @{{length}});
             tr.select();
         }
         catch (e) {
diff --git a/library/__ie6__/pyjamas/ui/horizsplitpanel.py b/library/__ie6__/pyjamas/ui/horizsplitpanel.py
index 64ec55c..832c7b5 100644
--- a/library/__ie6__/pyjamas/ui/horizsplitpanel.py
+++ b/library/__ie6__/pyjamas/ui/horizsplitpanel.py
@@ -133,8 +133,8 @@ class ImplHorizontalSplitPanel:
         resizefn = getattr(self, "onResize")
 
         JS("""
-            container.onresize = function() {
-               resizefn();
+            @{{container}}.onresize = function() {
+               @{{resizefn}}();
                                       }
         """)
 
diff --git a/library/pyjamas/PyExternalMod.py b/library/pyjamas/PyExternalMod.py
index c731f6d..65428f6 100644
--- a/library/pyjamas/PyExternalMod.py
+++ b/library/pyjamas/PyExternalMod.py
@@ -30,17 +30,17 @@ class PyjamasExternalModule:
 
     def __encodeJSON(self, obj):
         JS('''
-        var t = typeof(obj);
-        if(obj==null) {
+        var t = typeof(@{{obj}});
+        if(@{{obj}}==null) {
             return 'null';
         }else if(t=='number') {
-            return ''+obj;
+            return ''+@{{obj}};
         }else if(t=='string'){
-            return '"'+obj+'"'
-        }else if(isinstance([obj,list],{})) {
+            return '"'+@{{obj}}+'"'
+        }else if(isinstance([@{{obj}},list],{})) {
             var parts = [];
-            for(var i=0; i<obj.length; i++) {
-                parts.append([ self.__encodeJSON([obj[i]],{}) ],{});
+            for(var i=0; i<@{{obj}}.length; i++) {
+                parts.append([ @{{self}}.__encodeJSON([@{{obj}}[i]],{}) ],{});
             }
             return "[" + ','.join([parts],{}) + "]";
         }else{
@@ -51,8 +51,8 @@ class PyjamasExternalModule:
     def __parseJSON(self, str):
         JS(r"""
         try {
-            return (/^("(\\.|[^"\\\n\r])*?"|[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t])+?$/.test(str)) &&
-                eval('(' + str + ')');
+            return (/^("(\\.|[^"\\\n\r])*?"|[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t])+?$/.test(@{{str}})) &&
+                eval('(' + @{{str}} + ')');
         } catch (e) {
             return false;
         }
@@ -65,5 +65,5 @@ class PyjamasExternalModule:
             res = PyjamasExternalModule.http.syncPost(self.base+'/obj/handler',req)
             return self.__parseJSON(res)['result']
         JS("""
-        self[method] = inner;
+        @{{self}}[@{{method}}] = @{{inner}};
         """) 
diff --git a/pygtkweb/library/browser.py b/pygtkweb/library/browser.py
index 360949f..d1e6d0f 100644
--- a/pygtkweb/library/browser.py
+++ b/pygtkweb/library/browser.py
@@ -18,7 +18,7 @@ class Element:
     def __init__(self, tag=None, element=None):
         if tag is not None:
             JS('''
-            this.element = $doc.createElement(tag);
+            this.element = $doc.createElement(@{{tag}});
             ''')
         elif element is not None:
             self.element = element
@@ -30,12 +30,12 @@ class Element:
 
     def append(self, element):
         JS('''
-        this.element.appendChild(element.element);
+        this.element.appendChild(@{{element}}.element);
         ''')
 
     def prepend(self, element):
         JS('''
-        this.element.insertBefore(element.element, self.element.firstChild);
+        this.element.insertBefore(@{{element}}.element, @{{self}}.element.firstChild);
         ''')
 
     def getX(self):
@@ -82,7 +82,7 @@ class Element:
 
     def setStyle(self, property, value):
         JS('''
-        this.element.style[property] = value;
+        this.element.style[@{{property}}] = @{{value}};
         ''')
 
     def setPxStyle(self, property, value):
@@ -93,24 +93,24 @@ class Element:
 
     def getStyle(self, property):
         JS('''
-        return this.element.style[property];
+        return this.element.style[@{{property}}];
         ''')
 
     def setProperty(self, property, value):
         JS('''
-        //this.element.setAttribute(property,value);
-        this.element[property] = value;
+        //this.element.setAttribute(@{{property}},@{{value}});
+        this.element[@{{property}}] = @{{value}};
         ''')
 
     def getProperty(self, property):
         JS('''
-        //return this.element.getAttribute(property);
-        return this.element[property];
+        //return this.element.getAttribute(@{{property}});
+        return this.element[@{{property}}];
         ''')
 
     def setHTML(self, content):
         JS('''
-        this.element.innerHTML = content;
+        this.element.innerHTML = @{{content}};
         ''')
 
     def getHTML(self):
@@ -129,16 +129,16 @@ class Element:
             else if (e.srcElement) targ = e.srcElement;
             if (targ.nodeType == 3) targ = targ.parentNode;
             if (targ.__ref)
-                object.dom_event(e, targ.__ref);
+                @{{object}}.dom_event(e, targ.__ref);
             else
-                object.dom_event(e, null);
+                @{{object}}.dom_event(e, null);
         };
         ''')
         name = name[0]
         self.activeEvents.append((name, object))
         JS('''
-        var old_callback = this.element['on'+name];
-        this.element['on'+name] = function(e){if(old_callback){old_callback(e);}tmp(e);};
+        var old_callback = this.element['on'+@{{name}}];
+        this.element['on'+@{{name}}] = function(e){if(old_callback){old_callback(e);}tmp(e);};
         ''')
 
 class Document:
@@ -153,17 +153,17 @@ class Document:
     @staticmethod
     def append(element):
         JS('''
-        $doc.body.appendChild(element.element);
+        $doc.body.appendChild(@{{element}}.element);
         ''')
 
     @staticmethod
     def setContent(message):
         JS('''
-        $doc.body.innerHTML = message;
+        $doc.body.innerHTML = @{{message}};
         ''')
 
     @staticmethod
     def setTitle(title):
         JS('''
-        $doc.title = title;
+        $doc.title = @{{title}};
         ''')
-- 
1.6.3.3

